# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо
# только числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода пользователем
# очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class IsNumber(Exception):
    def __init__(self, text):
        self.text = text

    def __str__(self):
        return self.text

if __name__ == '__main__':
    user_list = []

    while True:
        user_input = input('Введите число для добавления в список или "stop", чтобы остановить: ')
        if user_input == 'stop':
            break
        try:
            if not user_input.isdigit():
                raise IsNumber(f'Введенные данные {user_input} не является числом')

            user_list.append(int(user_input))
        except IsNumber as error:
            print(error)

    print(user_list)